{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","Loading","Users","props","users","map","user","value","name","id","className","status","App","useState","loading","setLoading","setUsers","fetchAndSetUsers","a","get","response","data","console","log","useEffect","style","display","alignItems","textAlign","flexDirection","height","width","src","logo","alt","marginBottom","marginTop","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAe,MAA0B,iC,+BCKzCA,IAAMC,SAASC,QAA8E,GAE7F,IAAMC,EAAU,kBACZ,8BACI,oDAIFC,EAAQ,SAACC,GAEX,OADkBA,EAAVC,MACKC,KAAI,SAACC,GACd,OACI,gCACI,iCAAuBA,EAAKC,MAAMC,MAArBF,EAAKG,IAClB,sBAAoBC,UAAWJ,EAAKC,MAAMI,OAA1C,oBAAuDL,EAAKC,MAAMI,SAAvDL,EAAKG,MAFVH,EAAKG,QAoEZG,EA3DH,WAAO,IAAD,EACcC,oBAAS,GADvB,mBACTC,EADS,KACAC,EADA,OAEUF,mBAAS,IAFnB,mBAETT,EAFS,KAEFY,EAFE,KAIVC,EAAgB,uCAAG,4BAAAC,EAAA,sEAEnBH,GAAW,GAFQ,SAGIjB,IAAMqB,IAAI,cAHd,OAGbC,EAHa,OAInBJ,EAASI,EAASC,KAAKjB,OACvBW,GAAW,GALQ,gDAOnBO,QAAQC,IAAR,MACAR,GAAW,GARQ,yDAAH,qDAgBtB,OAJAS,qBAAU,WACRP,MACC,IAGD,sBAAKP,UAAU,MAAMe,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,UAAW,SAAUC,cAAe,SAAUC,OAAQ,SAA3H,UACI,qBAAKA,OAAQ,IAAKC,MAAO,IAAKC,IAAKC,EAAMvB,UAAU,WAAWwB,IAAI,OAAOT,MAAO,CAAEU,cAAe,GAAIC,WAAY,MACjH,8DAGA,sGACyE,uBADzE,gBAGI,mBACI1B,UAAU,WACV2B,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJR,iCAHJ,OAYA,uGAGCzB,EACK,cAAC,EAAD,IACA,cAAC,EAAD,CAAOV,MAAOA,IAEpB,iEACA,+DACkC,+CADlC,YAEI,yCAFJ,6CAGI,6CAHJ,sLAMI,0DANJ,MAOI,wDAPJ,uBC5DOoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5e1a65e2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect } from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios'\n\naxios.defaults.baseURL = process.env.NODE_ENV === 'development' ? 'your-base-api-url-here' : ''\n\nconst Loading = () => (\n    <div>\n        <p>Loading Users...</p>\n    </div>\n)\n\nconst Users = (props) => {\n    const { users } = props\n    return users.map((user) => {\n        return (\n            <div key={user.id}>\n                <strong key={user.id}>{user.value.name}</strong>\n                <span key={user.id} className={user.value.status}>{` ${user.value.status}`}</span>\n            </div>\n        )\n    })\n}\n\n\nconst App = () => {\n  const [loading, setLoading] = useState(false)\n  const [users, setUsers] = useState([])\n\n  const fetchAndSetUsers = async () => {\n    try {\n        setLoading(true)\n        const response = await axios.get('/api/users')\n        setUsers(response.data.users)\n        setLoading(false)\n    } catch (e) {\n        console.log(e)\n        setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchAndSetUsers()\n  }, [])\n\n  return (\n    <div className='App' style={{ display: 'flex', alignItems: 'center', textAlign: 'center', flexDirection: 'column', height: '100vh' }}>\n        <img height={400} width={400} src={logo} className=\"App-logo\" alt=\"logo\" style={{ marginBottom: -50, marginTop: -50 }} />\n        <h1>\n            React.js on Serverless Cloud\n        </h1>\n        <p>\n            For a guide and recipes on how to configure / customize this project,<br />\n            check out the\n            <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                React Documentation\n            </a>.\n        </p>\n        <p>\n            The information below is being fetched from your Serverless Cloud API:\n        </p>\n        {loading\n            ? <Loading/>\n            : <Users users={users} />\n        }\n        <h3>Edit this React.js app locally:</h3>\n        <p>\n            Open a separate terminal, run <code>cd frontend</code> and then\n            <code>npm i</code> to install the React.js dependencies. Run\n            <code>npm start</code> to launch a local version enabling you to make\n            changes and view them locally. If you want to connect to your personal\n            developer instance from your local React project, update the\n            <code>axios.defaults.baseURL</code> in\n            <code>/frontend/src/App.js</code> to your URL.\n        </p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}